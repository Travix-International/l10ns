var numberFormats = this.__{{=it.type}}Formats__{{=it.numberSystem}};
var previousIndex = -1;
outer:
for (var i = 0; i <= numberFormats.length; i++) {
  if (i === numberFormats.length || it.{{=it.variableName}} < numberFormats[i].threshold) {
    if (previousIndex === -1) {
      numberString += it.{{=it.variableName}};
      break outer;
    }
    var previousFormat = numberFormats[previousIndex];
    var ratio = it.{{=it.variableName}} / previousFormat.threshold;
    var actualNumber = ratio * Math.pow(10, previousFormat.formats[0].decimalPattern.length - 1);
    var computedPluralRule = this.__getPluralKeyword(actualNumber);
    for (var formatIndex = 0; formatIndex < previousFormat.formats.length; formatIndex++) {
      var format = previousFormat.formats[formatIndex];
      var referencePluralForm = format.pluralForm;
      if (i === numberFormats.length) {
        var numberFormatString = this.__formatStandardNumber__{{=it.numberSystem}}(actualNumber);
        numberString += format.format.replace('{0}', numberFormatString);
        break outer;
      }
      if (computedPluralRule === referencePluralForm) {
        var numberFormatString = this['__{{=it.type}}__{{=it.numberSystem}}__' + format.decimalPattern](actualNumber, {{=it.minDigits}});
        numberString += format.format.replace('{0}', numberFormatString);
        break outer;
      }
    }
  }
  previousIndex = i;
}